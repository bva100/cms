<?php

namespace Cms\CoreBundle\Document;

use Doctrine\ODM\MongoDB\Mapping\Annotations as MongoDB;

/**
 * Class Node
 * @package Cms\CoreBundle\Document
 * @MongoDB\Document(collection="nodes")
 */
class Node
{
    /**
     * @MongoDB\Id
     */
    private $id;

    /**
     * @MongoDB\Int
     */
    private $modified;

    /**
     * @MongoDB\Int
     */
    private $created;

    /**
     * @MongoDB\Hash
     */
    private $metadata;

    /**
     * @MongoDB\Hash
     */
    private $view;

    /**
     * @MongoDB\Hash
     */
    private $comments;

    /**
     * Constructor. Sets craeted to current unix timestamp int
     */
    public function __construct()
    {
        $this->created = time();
    }

    /**
     * Get id
     *
     * @return id $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set modified
     *
     * @param $modified
     * @return $this
     * @return $this
     */
    public function setModified($modified)
    {
        $this->modified = $modified;
        return $this;
    }

    /**
     * Get modified
     *
     * @return int $modified
     */
    public function getModified()
    {
        return $this->modified;
    }

    /**
     * Set created
     *
     * @param $created
     * @return int
     */
    public function setCreated($created)
    {
        $this->created = $created;
        return $this;
    }

    /**
     * Get created
     *
     * @return int
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * @param array $newMetadata
     * @return $this
     */
    public function addMetadata(array $newMetadata)
    {
        $metadataArray = $this->getMetadata();
        if ( ! $metadataArray )
        {
            $metadataArray = array();
        }
        // tags and category must be arrays

        $metadataArray[] = $newMetadata;
        $this->metadata = $metadataArray;
        return $this;
    }

    /**
     * Get metadata
     *
     * @return hash $metadata
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    public function setView(array $view)
    {
        $this->view = $view;
        return $this;
    }

    /**
     * Get view
     *
     * @return hash $view
     */
    public function getView()
    {
        return $this->view;
    }

    /**
     * Set comments
     *
     * @param $comments
     * @return $this
     * @return $this
     */
    public function setComments($comments)
    {
        $this->comments = $comments;
        return $this;
    }

    /**
     * Get comments
     *
     * @return hash $comments
     */
    public function getComments()
    {
        return $this->comments;
    }
}
